{"version":3,"sources":["Card.js","AddCard.js","Cards.js","ColumnHeader.js","Column.js","Board.js","App.js","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","setState","inputValue","target","textContent","state","_this2","react_default","a","createElement","className","contentEditable","placeholder","spellCheck","onInput","onClick","removeCard","id","React","Component","AddCard","concat","visibilityClass","createCard","Cards","_this$state","ids","cards","cardIdx","indexOf","toConsumableArray","slice","newId","_this$state2","parseInt","length","Card_Card","key","visibilityClassBlock","visible","visibilityClassFlex","AddCard_AddCard","ColumnHeader","handleChange","text","currentTarget","handleAddColumnName","handleAddColumnClick","isNameAdded","none","type","handleRemoveColumn","Column","ColumnHeader_ColumnHeader","isAdded","removeColumn","Cards_Cards","Board","addColumn","columns","Column_Column","columnIdx","console","log","App","Board_Board","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3b072480.chunk.js","sourcesContent":["import React from 'react';\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue : \"\",\n        }\n    }\n\n    handleInput = (e) => {\n        this.setState({\n            inputValue : e.target.textContent,\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-text\"\n                     contentEditable=\"true\"\n                     placeholder=\"Введите название кaрточки\"\n                     spellCheck=\"false\"\n                     onInput={this.handleInput}\n                >\n                </div>\n                <div className=\"delete-icon remove-card\"\n                     onClick={() => this.props.removeCard(this.props.id)}\n                >\n                </div>\n            </div>\n        )\n    }\n}\n\nexport {Card}","import React from 'react'\n\nclass AddCard extends React.Component {\n    render() {\n        return (\n            <div className={`add-card ${this.props.visibilityClass}`}>\n                <div className=\"plus-icon\"></div>\n                <p onClick={this.props.createCard}\n                >\n                    Добавить еще одну карточку\n                </p>\n            </div>\n        )\n    }\n}\n\nexport {AddCard}","import React from 'react';\nimport {Card} from './Card.js'\nimport {AddCard} from \"./AddCard\";\n\nclass Cards extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ids : [\"0card\"],\n            cards : [<Card id=\"0card\"\n                           key=\"0card\"\n                           removeCard={this.removeCard}\n            />],\n        }\n    }\n\n    removeCard = (id) => {\n        const { ids, cards } = this.state;\n        const cardIdx = ids.indexOf(id);\n        this.setState({\n            cards: [...cards.slice(0, cardIdx), ...cards.slice(cardIdx+1)],\n            ids: [...ids.slice(0, cardIdx), ...ids.slice(cardIdx+1)]\n        });\n    };\n\n    createCard = () => {\n        const {cards, ids} = this.state;\n        let newId;\n        try {\n            newId = parseInt(ids[ids.length-1][0]) + 1 + \"card\";\n            this.setState({\n                cards : [...cards, <Card id={newId}\n                                         key={newId}\n                                         removeCard={this.removeCard}/>],\n                ids : [...ids, newId],\n            })\n        } catch (e) {\n            newId = 0 + \"card\";\n        }\n        this.setState({\n            cards : [...cards, <Card id={newId}\n                                     key={newId}\n                                     removeCard={this.removeCard}/>],\n            ids : [...ids, newId],\n        })\n    };\n\n    render() {\n        let visibilityClassBlock = this.props.visible ? \"block\" : \"none\";\n        let visibilityClassFlex = this.props.visible ? \"flex\" : \"none\";\n        return (\n            <div className={`cards ${visibilityClassBlock}`}\n            >\n                {this.state.cards}\n                <AddCard visibilityClass={visibilityClassFlex}\n                         createCard={this.createCard}\n                />\n            </div>\n        )\n    }\n}\n\nexport {Cards}","import React from 'react';\n\nclass ColumnHeader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text : \"\",\n            isNameAdded : false,\n        }\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            text : e.currentTarget.textContent,\n        })\n    };\n\n    handleAddColumnName = () => {\n        this.props.handleAddColumnClick();\n        this.setState({\n            isNameAdded : true,\n        })\n    };\n\n    render() {\n        let none = this.state.isNameAdded ?  \" none\" : \"\";\n        let type = this.state.isNameAdded ? \" header-text\" : \"card column-name\";\n        return (\n            <div className=\"column-header\">\n                <div className={type}\n                     contentEditable=\"true\"\n                     spellCheck=\"false\"\n                     onInput={this.handleChange}\n                >\n                </div>\n                <button className={\"add-column\" + none}\n                        onClick={this.handleAddColumnName}\n                >\n                    Добавить колонку\n                </button>\n                <div className=\"delete-icon remove-column\"\n                     onClick={this.props.handleRemoveColumn}\n                ></div>\n            </div>\n        )\n    }\n}\n\nexport {ColumnHeader}\n","import React from 'react';\nimport {Cards} from './Cards'\nimport {ColumnHeader} from \"./ColumnHeader\";\n\nclass Column extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id : this.props.id,\n            isNameAdded : false,\n        }\n    }\n\n    handleAddColumnClick = () => {\n        this.setState({\n            isNameAdded : true,\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"column\">\n                <ColumnHeader handleAddColumnClick={this.handleAddColumnClick}\n                              isAdded={this.state.isNameAdded}\n                              handleRemoveColumn={() => this.props.removeColumn(this.state.id)}\n                />\n                <Cards visible={this.state.isNameAdded}/>\n            </div>\n        )\n    }\n}\n\nexport {Column}\n","import React from 'react';\nimport {Column} from './Column'\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns : [<Column id=\"0column\"\n                               key=\"0column\"\n                               removeColumn={this.removeColumn}\n            />],\n            ids : [\"0column\"],\n        }\n    }\n\n    addColumn = () => {\n        const {columns, ids} = this.state;\n        const newId = parseInt(ids[ids.length-1]) + 1 + \"column\";\n        this.setState({\n            columns : [...columns, <Column id={newId}\n                                           key={newId}\n                                           removeColumn={this.removeColumn}/>],\n            ids : [...ids, newId],\n        });\n    };\n\n    removeColumn = (id) => {\n        const { ids, columns } = this.state;\n        const columnIdx = ids.indexOf(id);\n        this.setState({\n            columns: [...columns.slice(0, columnIdx), ...columns.slice(columnIdx+1)],\n            ids: [...ids.slice(0, columnIdx), ...ids.slice(columnIdx+1)]\n        });\n        console.log(ids)\n    };\n\n    render() {\n        return (\n            <div className=\"board\">\n                {this.state.columns}\n                <div className=\"one-more-column column\"\n                     onClick={this.addColumn}\n                >\n                    <div className=\"plus-icon\"></div>\n                    <p>Добавить еще одну колонку</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport {Board}","import React from 'react';\nimport { Board } from './Board'\nimport './style/app.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Board />\n        )\n    }\n}\n\nexport { App }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from \"./App\"\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}